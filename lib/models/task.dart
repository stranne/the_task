import 'package:objectbox/objectbox.dart';
import 'package:the_task/app/app.locator.dart';
import 'package:the_task/models/goal.dart';
import 'package:the_task/models/task_feedback.dart';
import 'package:the_task/models/task_state.dart';
import 'package:the_task/services/task_state_service.dart';

@Entity()
class Task {
  int id;
  // Objectbox can't handle enums, so we need to store the state as an int.
  int stateId;
  String title;
  String description;
  String why;
  List<String> stepByStep;
  String success;
  final feedback = ToOne<TaskFeedback>();
  final goal = ToOne<Goal>();

  TaskState get state => locator<TaskStateService>().fromInt(stateId);
  set state(TaskState value) =>
      stateId = locator<TaskStateService>().toInt(value);

  Task({
    this.id = 0,
    required this.stateId,
    required this.title,
    required this.description,
    required this.why,
    required this.stepByStep,
    required this.success,
  });

  factory Task.fromJson(Map<String, dynamic> json) {
    return Task(
      // Skip id as it's auto-generated by Objectbox.
      stateId: TaskStateService.mappings[TaskState.waitingForApproval]!,
      title: json['title'],
      description: json['description'],
      why: json['why'],
      stepByStep: List<String>.from(json['stepByStep']),
      success: json['success'],
    );
  }
}
